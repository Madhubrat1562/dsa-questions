int firstocc(vector<int>&arr,int n , int k)
{
    int i = 0;
    int j=n-1;
    int mid = i + (j-i)/2;
    int ans=-1;
    while(i<=j)
    {
        if(arr[mid]==k)
        {
        ans=mid;
        j =mid-1;
        }
        else if(arr[mid]>k)
        {
            j =mid-1;
        }
        else if(arr[mid]<k)
        {
            i =mid+1;
        }
        mid = i + (j-i)/2;
    }
    return ans;
}
int lastocc(vector<int>&arr,int n , int k)
{
    int i = 0;
    int j=n-1;
    int mid = i + (j-i)/2;
    int ans=-1;
    while(i<=j)
    {
        if(arr[mid]==k)
        {
        ans=mid;
        i=mid+1;
        }
        else if(arr[mid]>k)
        {
            j =mid-1;
        }
        else if(arr[mid]<k)
        {
            i =mid+1;
        }
        mid = i + (j-i)/2;
    }
    return ans;
}
pair<int, int> firstAndLastPosition(vector<int>& arr, int n, int k)
{
    pair<int,int> p;
    p.first=firstocc(arr,n,k);
    p.second=lastocc(arr,n,k);
    return p;
}
